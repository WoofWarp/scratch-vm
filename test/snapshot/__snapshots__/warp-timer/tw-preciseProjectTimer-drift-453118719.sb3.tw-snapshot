// TW Snapshot
// Input SHA-256: 19e0b3f9dcac763041039a8ffe87b6732eb744f9ebb136e8d61a53ccf19118e3

// Sprite1 script
(function factoryXYZ(thread) { const target = thread.target; const runtime = target.runtime; const stage = runtime.getTargetForStage();
const b0 = stage.variables["PsY$$vp$IVH;dDAr[q2h"];
const b1 = runtime.getOpcodeFunction("looks_say");
const b2 = stage.variables["l^q!%fq]Bv;72dlGf}^Z"];
return function* genXYZ () {
b0.value = 0;
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("plan 0"),}, b1);
for (var a0 = 30; a0 >= 0.5; a0--) {
b2.value = runtime.ioDevices.clock.projectTimer();
thread.timer = timer();
var a1 = Math.max(0, 1000 * 0);
runtime.requestRedraw();
yield globalState.blockUtility.yield();
while (thread.timer.timeElapsed() < a1) {
yield globalState.blockUtility.yield();
}
thread.timer = null;
yield globalState.blockUtility.yield();
}
b0.value = 1;
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("end"),}, b1);
retire(); return;
}; })

// Sprite1 script
(function factoryXYZ(thread) { const target = thread.target; const runtime = target.runtime; const stage = runtime.getTargetForStage();
const b0 = stage.variables["l^q!%fq]Bv;72dlGf}^Z"];
const b1 = runtime.getOpcodeFunction("event_whengreaterthan");
const b2 = stage.variables["PsY$$vp$IVH;dDAr[q2h"];
const b3 = runtime.getOpcodeFunction("looks_say");
return function* genXYZ () {
{
const resolvedValue = toBoolean((yield* executeInCompatibilityLayer({"VALUE":toGenerator(b0.value),"WHENGREATERTHANMENU":{"name":"WHENGREATERTHANMENU","value":"TIMER","id":null},}, b1)));
const id = "iNmua~6veGey6O-_UB9.";
const hasOldEdgeValue = target.hasEdgeActivatedValue(id);
const oldEdgeValue = target.updateEdgeActivatedValue(id, resolvedValue);
const edgeWasActivated = hasOldEdgeValue ? (!oldEdgeValue && resolvedValue) : resolvedValue;
if (!edgeWasActivated) {
retire(); return;
}
yield globalState.blockUtility.yield();
}
if (compareEqual(b2.value, 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("fail"),}, b3);
}
retire(); return;
}; })
