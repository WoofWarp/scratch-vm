// TW Snapshot
// Input SHA-256: 2c124b6184d3cbeb3d692ba7a04266d8bf141c650a9cc43b28faf59ac394ee16

// Sprite1 script
(function factoryXYZ(thread) { const target = thread.target; const runtime = target.runtime; const stage = runtime.getTargetForStage();
const b0 = runtime.getOpcodeFunction("looks_say");
return function* genXYZ () {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("plan 20"),}, b0);
if ((("" + (0 * Infinity)).toLowerCase() === "NaN".toLowerCase())) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual((((0 * Infinity) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if ((("" + ((Math.acos(1.01) * 180) / Math.PI)).toLowerCase() === "NaN".toLowerCase())) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual(((((Math.acos(1.01) * 180) / Math.PI) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if ((("" + ((Math.asin(1.01) * 180) / Math.PI)).toLowerCase() === "NaN".toLowerCase())) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual(((((Math.asin(1.01) * 180) / Math.PI) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if ((("" + (0 / 0)).toLowerCase() === "NaN".toLowerCase())) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual((((0 / 0) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if ((("" + Math.sqrt(-1)).toLowerCase() === "NaN".toLowerCase())) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual(((Math.sqrt(-1) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if ((("" + mod(0, 0)).toLowerCase() === "NaN".toLowerCase())) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual(((mod(0, 0) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if ((("" + Math.log(-1)).toLowerCase() === "NaN".toLowerCase())) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual(((Math.log(-1) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if ((("" + (Math.log(-1) / Math.LN10)).toLowerCase() === "NaN".toLowerCase())) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual((((Math.log(-1) / Math.LN10) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual((((Math.round(Math.sin((Math.PI * ((1 / 0) || 0)) / 180) * 1e10) / 1e10) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual((((Math.round(Math.cos((Math.PI * ((1 / 0) || 0)) / 180) * 1e10) / 1e10) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual(((tan(((1 / 0) || 0)) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
if (compareEqual(((runtime.ext_scratch3_operators._random((-1 / 0), (1 / 0)) || 0) * 1), 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass"),}, b0);
}
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("end"),}, b0);
retire(); return;
}; })
