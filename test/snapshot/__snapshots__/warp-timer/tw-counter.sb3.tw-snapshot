// TW Snapshot
// Input SHA-256: 29dd30c632645f071bfd450530dab86dc85a2c1cf30564bee984394a790eca6a

// 2 script
(function factoryXYZ(thread) { const target = thread.target; const runtime = target.runtime; const stage = runtime.getTargetForStage();
const b0 = runtime.getOpcodeFunction("looks_say");
return function* genXYZ () {
if ((runtime.ext_scratch3_control._counter === 10)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass global"),}, b0);
}
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("end"),}, b0);
retire(); return;
}; })

// 1 script
(function factoryXYZ(thread) { const target = thread.target; const runtime = target.runtime; const stage = runtime.getTargetForStage();
const b0 = runtime.getOpcodeFunction("looks_say");
return function* genXYZ () {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("plan 5"),}, b0);
if ((runtime.ext_scratch3_control._counter === 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass initial value = 0"),}, b0);
}
runtime.ext_scratch3_control._counter++;
if ((runtime.ext_scratch3_control._counter === 1)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass incr 1"),}, b0);
}
runtime.ext_scratch3_control._counter++;
if ((runtime.ext_scratch3_control._counter === 2)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass incr 2"),}, b0);
}
runtime.ext_scratch3_control._counter = 0;
if ((runtime.ext_scratch3_control._counter === 0)) {
yield* executeInCompatibilityLayer({"MESSAGE":toGenerator("pass clear = 0"),}, b0);
}
for (var a0 = 10; a0 >= 0.5; a0--) {
runtime.ext_scratch3_control._counter++;
yield globalState.blockUtility.yield();
}
startHats("event_whenbroadcastreceived", { BROADCAST_OPTION: "check globalness" });
retire(); return;
}; })
